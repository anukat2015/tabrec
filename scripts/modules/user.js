// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  this.User = (function() {
    var connection, create_if_not_exists, create_user, generate_uuid;

    function User() {}

    connection = new Connection();

    User.prototype.in_context = function(callback) {
      return chrome.storage.sync.get(['user_id'], function(result) {
        var new_id, session_id;
        session_id = generate_uuid();
        if (result.user_id) {
          create_if_not_exists(result.user_id);
          return callback(result.user_id, session_id);
        } else {
          new_id = generate_uuid();
          return chrome.storage.sync.set({
            'user_id': new_id
          }, function() {
            create_user(new_id);
            return callback(new_id, session_id);
          });
        }
      });
    };

    generate_uuid = function() {
      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        var r, v;
        r = Math.random() * 16 | 0;
        v = c === 'x' ? r : r & 0x3 | 0x8;
        return v.toString(16);
      });
    };

    create_if_not_exists = function(id) {
      return connection.get_user(id, function(user) {
        if (!user) {
          return create_user(connection, id);
        }
      });
    };

    create_user = function(id) {
      return connection.create_user({
        id: id,
        rec_mode: 'default',
        experience: 'default'
      });
    };

    return User;

  })();

}).call(this);
