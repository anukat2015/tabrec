// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  this.MultiClosePattern = (function() {
    var CURRENT_VERSION, DBG_MODE, NAME, PATTERN_SEQUENCE, clear_arrays, get_domain, record_remove_event_data, three_consecutive_tab_removes_on_same_domain, _current_sequence, _recorded;

    PATTERN_SEQUENCE = null;

    NAME = null;

    DBG_MODE = null;

    CURRENT_VERSION = null;

    _recorded = [];

    _current_sequence = [];

    function MultiClosePattern() {
      DBG_MODE = Constants.is_debug_mode();
      CURRENT_VERSION = Constants.get_current_close_pattern_version();
      PATTERN_SEQUENCE = ['TAB_REMOVED', 'TAB_REMOVED', 'TAB_REMOVED'];
      NAME = "MULTI_CLOSE_" + CURRENT_VERSION;
    }

    MultiClosePattern.prototype.pattern_sequence = function() {
      return PATTERN_SEQUENCE.toString();
    };

    MultiClosePattern.prototype.current_sequence = function() {
      return _current_sequence.toString();
    };

    MultiClosePattern.prototype.name = function() {
      return NAME;
    };

    MultiClosePattern.prototype.register_event = function(event_name, event_data) {
      if (event_name === 'TAB_REMOVED') {
        _current_sequence.push(event_name);
        record_remove_event_data(event_data);
        if (DBG_MODE) {
          return console.log("Multi close: current sequence: " + _current_sequence);
        }
      }
    };

    MultiClosePattern.prototype.specific_conditions_satisfied = function() {
      if (three_consecutive_tab_removes_on_same_domain()) {
        return true;
      } else {
        return false;
      }
    };

    MultiClosePattern.prototype.reset_states = function() {
      if (DBG_MODE) {
        console.log("Multi close: resetting states");
      }
      return clear_arrays();
    };

    clear_arrays = function() {
      _recorded = [];
      return _current_sequence = [];
    };

    record_remove_event_data = function(event_data) {
      var domain, url;
      url = event_data.url;
      domain = get_domain(url);
      return _recorded.push(domain);
    };

    three_consecutive_tab_removes_on_same_domain = function() {
      return false;
    };

    get_domain = function(url) {
      var array, subdomain, top_level_domain, url_obj;
      url_obj = new URL(url);
      subdomain = url_obj.hostname;
      array = subdomain.split('.');
      top_level_domain = array.pop();
      return "" + (array.pop()) + "." + top_level_domain;
    };

    return MultiClosePattern;

  })();

}).call(this);
