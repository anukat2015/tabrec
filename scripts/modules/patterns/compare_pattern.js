// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  this.ComparePattern = (function() {
    var CURRENT_VERSION, DBG_MODE, NAME, PATTERN_SEQUENCE, already_present, clear_arrays, should_record_activate, _current_sequence, _recorded;

    PATTERN_SEQUENCE = null;

    NAME = null;

    DBG_MODE = null;

    CURRENT_VERSION = null;

    _recorded = [];

    _current_sequence = [];

    function ComparePattern() {
      DBG_MODE = Constants.is_debug_mode();
      CURRENT_VERSION = Constants.get_current_compare_pattern_version();
      PATTERN_SEQUENCE = ['TAB_ACTIVATED', 'TAB_ACTIVATED', 'TAB_ACTIVATED', 'TAB_ACTIVATED'];
      NAME = "COMPARE_" + CURRENT_VERSION;
    }

    ComparePattern.prototype.pattern_sequence = function() {
      return PATTERN_SEQUENCE.toString();
    };

    ComparePattern.prototype.current_sequence = function() {
      return _current_sequence.toString();
    };

    ComparePattern.prototype.name = function() {
      return NAME;
    };

    ComparePattern.prototype.register_event = function(event_name, event_data) {
      if (event_name === 'TAB_ACTIVATED') {
        if (should_record_activate(event_data)) {
          _current_sequence.push(event_name);
        }
      } else {
        _current_sequence.push(event_name);
      }
      if (DBG_MODE) {
        return console.log("Compare: current sequence: " + _current_sequence);
      }
    };

    ComparePattern.prototype.specific_conditions_satisfied = function() {
      return true;
    };

    ComparePattern.prototype.reset_states = function() {
      if (DBG_MODE) {
        console.log("Compare: resetting states");
      }
      return clear_arrays();
    };

    clear_arrays = function() {
      _recorded = [];
      return _current_sequence = [];
    };

    should_record_activate = function(data) {
      var id;
      id = data.tab_id;
      if (_recorded.length < 3 || already_present(_recorded, id)) {
        _recorded.push(id);
        return true;
      } else {
        return false;
      }
    };

    already_present = function(array, element) {
      return array.indexOf(element) > -1;
    };

    return ComparePattern;

  })();

}).call(this);
