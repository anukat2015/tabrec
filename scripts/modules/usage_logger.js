// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  this.UsageLogger = (function() {
    var batch_size, cache_usage_log, connection, debug_mode, get_current_ts, get_domain, parser, post_usage_logs, sha1, sid, tab_activated, tab_attached, tab_created, tab_detached, tab_moved, tab_removed, tab_updated, uid, _cache, _last_post_time;

    connection = null;

    debug_mode = false;

    batch_size = 100;

    uid = null;

    sid = null;

    parser = document.createElement('a');

    sha1 = new Sha1();

    function UsageLogger(connection, batch_size, user_id, session_id, debug_mode) {
      this.connection = connection;
      this.batch_size = batch_size;
      this.user_id = user_id;
      this.session_id = session_id;
      this.debug_mode = debug_mode;
      connection = this.connection;
      debug_mode = this.debug_mode;
      batch_size = this.batch_size;
      uid = this.user_id;
      sid = this.session_id;
    }

    UsageLogger.prototype.start = function() {
      if (debug_mode) {
        console.log("Usage logger has started!");
      }
      chrome.tabs.onCreated.addListener(tab_created);
      chrome.tabs.onRemoved.addListener(tab_removed);
      chrome.tabs.onActivated.addListener(tab_activated);
      chrome.tabs.onMoved.addListener(tab_moved);
      chrome.tabs.onAttached.addListener(tab_attached);
      chrome.tabs.onDetached.addListener(tab_detached);
      return chrome.tabs.onUpdated.addListener(tab_updated);
    };

    _cache = [];

    _last_post_time = new Date().getTime();

    cache_usage_log = function(log) {
      if (debug_mode) {
        console.log("Caching usage log: User id: " + log.user_id + ", Tab id: " + log.tab_id + ", Event: " + log.event + ", Time: " + log.timestamp);
      }
      _cache.push(log);
      if ((_cache.length >= batch_size) || (get_current_ts() - _last_post_time > (2 * 60 * 1000))) {
        return post_usage_logs();
      }
    };

    post_usage_logs = function() {
      connection.post_usage_logs(_cache);
      _cache.length = 0;
      return _last_post_time = get_current_ts();
    };

    get_current_ts = function() {
      return new Date().getTime();
    };

    get_domain = function(subdomain) {
      var array, top_level_domain;
      array = subdomain.split('.');
      top_level_domain = array.pop();
      return "" + (array.pop()) + "." + top_level_domain;
    };

    tab_created = function(tab) {
      var _domain, _path, _subdomain;
      parser.href = tab.url;
      _subdomain = parser.hostname;
      _domain = get_domain(_subdomain);
      _path = parser.pathname;
      if (debug_mode) {
        console.log("Subdomain: " + _subdomain + " domain: " + _domain + " path: " + _path + " url: " + parser.href);
      }
      return cache_usage_log({
        user_id: uid,
        session_id: sid,
        timestamp: get_current_ts(),
        event: 'TAB_CREATED',
        window_id: tab.windowId,
        tab_id: tab.id,
        url: sha1.process(parser.href),
        domain: sha1.process(_domain),
        subdomain: sha1.process(_subdomain),
        path: sha1.process(_path)
      });
    };

    tab_removed = function(tab_id, remove_info) {
      return cache_usage_log({
        user_id: uid,
        session_id: sid,
        timestamp: get_current_ts(),
        event: 'TAB_REMOVED',
        window_id: remove_info.windowId,
        tab_id: tab_id
      });
    };

    tab_activated = function(active_info) {
      return chrome.tabs.get(active_info.tabId, function(tab) {
        return cache_usage_log({
          user_id: uid,
          session_id: sid,
          timestamp: get_current_ts(),
          event: 'TAB_ACTIVATED',
          window_id: active_info.windowId,
          tab_id: active_info.tabId
        });
      });
    };

    tab_moved = function(tab_id, move_info) {
      return cache_usage_log({
        user_id: uid,
        session_id: sid,
        timestamp: get_current_ts(),
        event: 'TAB_MOVED',
        window_id: move_info.windowId,
        tab_id: tab_id,
        index_from: move_info.fromIndex,
        index_to: move_info.toIndex
      });
    };

    tab_attached = function(tab_id, attach_info) {
      return cache_usage_log({
        user_id: uid,
        session_id: sid,
        timestamp: get_current_ts(),
        event: 'TAB_ATTACHED',
        window_id: attach_info.newWindowId,
        tab_id: tab_id,
        index_to: attach_info.newPosition
      });
    };

    tab_detached = function(tab_id, detach_info) {
      return cache_usage_log({
        user_id: uid,
        session_id: sid,
        timestamp: get_current_ts(),
        event: 'TAB_DETACHED',
        window_id: detach_info.oldWindowId,
        tab_id: tab_id,
        index_from: detach_info.oldPosition
      });
    };

    tab_updated = function(tab_id, change_info, tab) {
      var _domain, _path, _subdomain;
      if (change_info.status === 'complete') {
        parser.href = tab.url;
        _subdomain = parser.hostname;
        _domain = get_domain(_subdomain);
        _path = parser.pathname;
        if (debug_mode) {
          console.log("Subdomain: " + _subdomain + " domain: " + _domain + " path: " + _path + " url: " + parser.href);
        }
        return cache_usage_log({
          user_id: uid,
          session_id: sid,
          timestamp: get_current_ts(),
          event: 'TAB_UPDATED',
          window_id: tab.windowId,
          tab_id: tab.id,
          url: sha1.process(parser.href),
          domain: sha1.process(_domain),
          subdomain: sha1.process(_subdomain),
          path: sha1.process(_path)
        });
      }
    };

    return UsageLogger;

  })();

}).call(this);
